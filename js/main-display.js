/*!
 * release-front <https://github.com/nabijaczleweli/release-front>
 * Copyright 2018 nabijaczleweli <https://nabijaczleweli.xyz>
 * Available under MIT license <https://opensource.org/licenses/mit>
 */
(function (global, factory) {
	if (typeof define === "function" && define.amd) {
		define(["./assets", "./platform-detect", "./url"], factory);
	} else if (typeof exports !== "undefined") {
		factory(require("./assets"), require("./platform-detect"), require("./url"));
	} else {
		var mod = {
			exports: {}
		};
		factory(global.assets, global.platformDetect, global.url);
		global.mainDisplay = mod.exports;
	}
})(this, function (_assets, _platformDetect, _url) {
	"use strict";

	window.addEventListener("load", function () {
		var DOWNLOAD_BUTTON = document.getElementById("main-button");
		var LOGO = document.getElementById("main-logo");
		var REPO_LINE = document.getElementById("main-repo-line");
		var LATEST_LINE = document.getElementById("main-latest-line");
		var HEADING_LINK = document.getElementById("main-heading-link");

		var REPO_NAME_CONTAINERS = document.getElementsByClassName("main-repo-name");
		var LATEST_LINK_CONTAINERS = document.getElementsByClassName("main-latest-link");
		var VERSION_CONTAINERS = document.getElementsByClassName("main-version");
		var PLATFORM_CONTAINERS = document.getElementsByClassName("main-platform");

		var slug = (0, _url.extract_slug)(window.location.search);

		var platform = _platformDetect.Platform.from_platform();
		Array.from(PLATFORM_CONTAINERS).forEach(function (_) {
			return _.innerText = _platformDetect.Platform.name(platform);
		});

		var slug_name = (0, _url.full_name)(slug);
		if (slug_name) {
			HEADING_LINK.href = "//github.com/" + slug_name;
			Array.from(REPO_NAME_CONTAINERS).forEach(function (_) {
				return _.innerText = slug_name;
			});
		}

		(0, _url.latest_release)(slug, function (status, release) {
			if (status < 200 || status >= 300) {
				REPO_LINE.classList.add("hidden");
				LATEST_LINE.classList.add("hidden");
				DOWNLOAD_BUTTON.classList.add("error");
				DOWNLOAD_BUTTON.innerText = "No releases found";
				DOWNLOAD_BUTTON.addEventListener("click", function () {
					return window.location.search = "";
				});
				return;
			}

			if (release.html_url) Array.from(LATEST_LINK_CONTAINERS).forEach(function (_) {
				return _.href = release.html_url;
			});

			if (release.tag_name) {
				Array.from(VERSION_CONTAINERS).forEach(function (_) {
					return _.innerText = release.tag_name;
				});
				(0, _url.find_logo)(slug, release.tag_name, function (logo_url) {
					if (logo_url) {
						LOGO.src = logo_url;
						LOGO.alt = slug_name + " logo";
						LOGO.title = LOGO.alt;
						LOGO.classList.remove("hidden");
					}
				});

				var ranked_assets = (0, _assets.rank_assets)(slug.repo, release.tag_name, release.assets, platform);
				ranked_assets.sort(function (lhs, rhs) {
					return rhs.score - lhs.score;
				});
				if (ranked_assets.length === 0) {
					DOWNLOAD_BUTTON.innerText = "No assets found";
					DOWNLOAD_BUTTON.href = release.html_url;
				} else DOWNLOAD_BUTTON.href = ranked_assets[0].data.browser_download_url;
			}
		});
	});
});

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9tYWluLWRpc3BsYXkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBNEJBLFFBQU8sZ0JBQVAsQ0FBd0IsTUFBeEIsRUFBZ0MsWUFBTTtBQUNyQyxNQUFNLGtCQUFrQixTQUFTLGNBQVQsQ0FBd0IsYUFBeEIsQ0FBeEI7QUFDQSxNQUFNLE9BQWtCLFNBQVMsY0FBVCxDQUF3QixXQUF4QixDQUF4QjtBQUNBLE1BQU0sWUFBa0IsU0FBUyxjQUFULENBQXdCLGdCQUF4QixDQUF4QjtBQUNBLE1BQU0sY0FBa0IsU0FBUyxjQUFULENBQXdCLGtCQUF4QixDQUF4QjtBQUNBLE1BQU0sZUFBa0IsU0FBUyxjQUFULENBQXdCLG1CQUF4QixDQUF4Qjs7QUFFQSxNQUFNLHVCQUF5QixTQUFTLHNCQUFULENBQWdDLGdCQUFoQyxDQUEvQjtBQUNBLE1BQU0seUJBQXlCLFNBQVMsc0JBQVQsQ0FBZ0Msa0JBQWhDLENBQS9CO0FBQ0EsTUFBTSxxQkFBeUIsU0FBUyxzQkFBVCxDQUFnQyxjQUFoQyxDQUEvQjtBQUNBLE1BQU0sc0JBQXlCLFNBQVMsc0JBQVQsQ0FBZ0MsZUFBaEMsQ0FBL0I7O0FBRUEsTUFBSSxPQUFPLHVCQUFhLE9BQU8sUUFBUCxDQUFnQixNQUE3QixDQUFYOztBQUVBLE1BQUksV0FBVyx5QkFBUyxhQUFULEVBQWY7QUFDQSxRQUFNLElBQU4sQ0FBVyxtQkFBWCxFQUFnQyxPQUFoQyxDQUF3QztBQUFBLFVBQUssRUFBRSxTQUFGLEdBQWMseUJBQVMsSUFBVCxDQUFjLFFBQWQsQ0FBbkI7QUFBQSxHQUF4Qzs7QUFFQSxNQUFJLFlBQVksb0JBQVUsSUFBVixDQUFoQjtBQUNBLE1BQUcsU0FBSCxFQUFjO0FBQ2IsZ0JBQWEsSUFBYixxQkFBb0MsU0FBcEM7QUFDQSxTQUFNLElBQU4sQ0FBVyxvQkFBWCxFQUFpQyxPQUFqQyxDQUF5QztBQUFBLFdBQUssRUFBRSxTQUFGLEdBQWMsU0FBbkI7QUFBQSxJQUF6QztBQUNBOztBQUVELDJCQUFlLElBQWYsRUFBcUIsVUFBQyxNQUFELEVBQVMsT0FBVCxFQUFxQjtBQUN6QyxPQUFHLFNBQVMsR0FBVCxJQUFnQixVQUFVLEdBQTdCLEVBQWtDO0FBQ2pDLGNBQVUsU0FBVixDQUFvQixHQUFwQixDQUF3QixRQUF4QjtBQUNBLGdCQUFZLFNBQVosQ0FBc0IsR0FBdEIsQ0FBMEIsUUFBMUI7QUFDQSxvQkFBZ0IsU0FBaEIsQ0FBMEIsR0FBMUIsQ0FBOEIsT0FBOUI7QUFDQSxvQkFBZ0IsU0FBaEIsR0FBNEIsbUJBQTVCO0FBQ0Esb0JBQWdCLGdCQUFoQixDQUFpQyxPQUFqQyxFQUEwQztBQUFBLFlBQU0sT0FBTyxRQUFQLENBQWdCLE1BQWhCLEdBQXlCLEVBQS9CO0FBQUEsS0FBMUM7QUFDQTtBQUNBOztBQUVELE9BQUcsUUFBUSxRQUFYLEVBQ0MsTUFBTSxJQUFOLENBQVcsc0JBQVgsRUFBbUMsT0FBbkMsQ0FBMkM7QUFBQSxXQUFLLEVBQUUsSUFBRixHQUFTLFFBQVEsUUFBdEI7QUFBQSxJQUEzQzs7QUFFRCxPQUFHLFFBQVEsUUFBWCxFQUFxQjtBQUNwQixVQUFNLElBQU4sQ0FBVyxrQkFBWCxFQUErQixPQUEvQixDQUF1QztBQUFBLFlBQUssRUFBRSxTQUFGLEdBQWMsUUFBUSxRQUEzQjtBQUFBLEtBQXZDO0FBQ0Esd0JBQVUsSUFBVixFQUFnQixRQUFRLFFBQXhCLEVBQWtDLG9CQUFZO0FBQzdDLFNBQUcsUUFBSCxFQUFhO0FBQ1osV0FBSyxHQUFMLEdBQWEsUUFBYjtBQUNBLFdBQUssR0FBTCxHQUFnQixTQUFoQjtBQUNBLFdBQUssS0FBTCxHQUFhLEtBQUssR0FBbEI7QUFDQSxXQUFLLFNBQUwsQ0FBZSxNQUFmLENBQXNCLFFBQXRCO0FBQ0E7QUFDRCxLQVBEOztBQVNBLFFBQUksZ0JBQWdCLHlCQUFZLEtBQUssSUFBakIsRUFBdUIsUUFBUSxRQUEvQixFQUF5QyxRQUFRLE1BQWpELEVBQXlELFFBQXpELENBQXBCO0FBQ0Esa0JBQWMsSUFBZCxDQUFtQixVQUFDLEdBQUQsRUFBTSxHQUFOO0FBQUEsWUFBYyxJQUFJLEtBQUosR0FBWSxJQUFJLEtBQTlCO0FBQUEsS0FBbkI7QUFDQSxRQUFHLGNBQWMsTUFBZCxLQUF5QixDQUE1QixFQUErQjtBQUM5QixxQkFBZ0IsU0FBaEIsR0FBNEIsaUJBQTVCO0FBQ0EscUJBQWdCLElBQWhCLEdBQTRCLFFBQVEsUUFBcEM7QUFDQSxLQUhELE1BSUMsZ0JBQWdCLElBQWhCLEdBQXVCLGNBQWMsQ0FBZCxFQUFpQixJQUFqQixDQUFzQixvQkFBN0M7QUFDRDtBQUNELEdBaENEO0FBaUNBLEVBeEREIiwiZmlsZSI6InN0ZG91dCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuLy9cbi8vIENvcHlyaWdodCAoYykgMjAxOCBuYWJpamFjemxld2VsaVxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGxcbi8vIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRVxuLy8gU09GVFdBUkUuXG5cblxuaW1wb3J0IHtyYW5rX2Fzc2V0c30gZnJvbSBcIi4vYXNzZXRzXCI7XG5pbXBvcnQge1BsYXRmb3JtfSBmcm9tIFwiLi9wbGF0Zm9ybS1kZXRlY3RcIjtcbmltcG9ydCB7ZXh0cmFjdF9zbHVnLCBmaW5kX2xvZ28sIGZ1bGxfbmFtZSwgbGF0ZXN0X3JlbGVhc2V9IGZyb20gXCIuL3VybFwiO1xuXG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCAoKSA9PiB7XG5cdGNvbnN0IERPV05MT0FEX0JVVFRPTiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpbi1idXR0b25cIik7XG5cdGNvbnN0IExPR08gICAgICAgICAgICA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpbi1sb2dvXCIpO1xuXHRjb25zdCBSRVBPX0xJTkUgICAgICAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW4tcmVwby1saW5lXCIpO1xuXHRjb25zdCBMQVRFU1RfTElORSAgICAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW4tbGF0ZXN0LWxpbmVcIik7XG5cdGNvbnN0IEhFQURJTkdfTElOSyAgICA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpbi1oZWFkaW5nLWxpbmtcIik7XG5cblx0Y29uc3QgUkVQT19OQU1FX0NPTlRBSU5FUlMgICA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJtYWluLXJlcG8tbmFtZVwiKTtcblx0Y29uc3QgTEFURVNUX0xJTktfQ09OVEFJTkVSUyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJtYWluLWxhdGVzdC1saW5rXCIpO1xuXHRjb25zdCBWRVJTSU9OX0NPTlRBSU5FUlMgICAgID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm1haW4tdmVyc2lvblwiKTtcblx0Y29uc3QgUExBVEZPUk1fQ09OVEFJTkVSUyAgICA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJtYWluLXBsYXRmb3JtXCIpO1xuXG5cdGxldCBzbHVnID0gZXh0cmFjdF9zbHVnKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpO1xuXG5cdGxldCBwbGF0Zm9ybSA9IFBsYXRmb3JtLmZyb21fcGxhdGZvcm0oKTtcblx0QXJyYXkuZnJvbShQTEFURk9STV9DT05UQUlORVJTKS5mb3JFYWNoKF8gPT4gXy5pbm5lclRleHQgPSBQbGF0Zm9ybS5uYW1lKHBsYXRmb3JtKSk7XG5cblx0bGV0IHNsdWdfbmFtZSA9IGZ1bGxfbmFtZShzbHVnKTtcblx0aWYoc2x1Z19uYW1lKSB7XG5cdFx0SEVBRElOR19MSU5LLmhyZWYgPSBgLy9naXRodWIuY29tLyR7c2x1Z19uYW1lfWA7XG5cdFx0QXJyYXkuZnJvbShSRVBPX05BTUVfQ09OVEFJTkVSUykuZm9yRWFjaChfID0+IF8uaW5uZXJUZXh0ID0gc2x1Z19uYW1lKTtcblx0fVxuXG5cdGxhdGVzdF9yZWxlYXNlKHNsdWcsIChzdGF0dXMsIHJlbGVhc2UpID0+IHtcblx0XHRpZihzdGF0dXMgPCAyMDAgfHwgc3RhdHVzID49IDMwMCkge1xuXHRcdFx0UkVQT19MSU5FLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIik7XG5cdFx0XHRMQVRFU1RfTElORS5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpO1xuXHRcdFx0RE9XTkxPQURfQlVUVE9OLmNsYXNzTGlzdC5hZGQoXCJlcnJvclwiKTtcblx0XHRcdERPV05MT0FEX0JVVFRPTi5pbm5lclRleHQgPSBcIk5vIHJlbGVhc2VzIGZvdW5kXCI7XG5cdFx0XHRET1dOTE9BRF9CVVRUT04uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2ggPSBcIlwiKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZihyZWxlYXNlLmh0bWxfdXJsKVxuXHRcdFx0QXJyYXkuZnJvbShMQVRFU1RfTElOS19DT05UQUlORVJTKS5mb3JFYWNoKF8gPT4gXy5ocmVmID0gcmVsZWFzZS5odG1sX3VybCk7XG5cblx0XHRpZihyZWxlYXNlLnRhZ19uYW1lKSB7XG5cdFx0XHRBcnJheS5mcm9tKFZFUlNJT05fQ09OVEFJTkVSUykuZm9yRWFjaChfID0+IF8uaW5uZXJUZXh0ID0gcmVsZWFzZS50YWdfbmFtZSk7XG5cdFx0XHRmaW5kX2xvZ28oc2x1ZywgcmVsZWFzZS50YWdfbmFtZSwgbG9nb191cmwgPT4ge1xuXHRcdFx0XHRpZihsb2dvX3VybCkge1xuXHRcdFx0XHRcdExPR08uc3JjICAgPSBsb2dvX3VybDtcblx0XHRcdFx0XHRMT0dPLmFsdCAgID0gYCR7c2x1Z19uYW1lfSBsb2dvYDtcblx0XHRcdFx0XHRMT0dPLnRpdGxlID0gTE9HTy5hbHQ7XG5cdFx0XHRcdFx0TE9HTy5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0bGV0IHJhbmtlZF9hc3NldHMgPSByYW5rX2Fzc2V0cyhzbHVnLnJlcG8sIHJlbGVhc2UudGFnX25hbWUsIHJlbGVhc2UuYXNzZXRzLCBwbGF0Zm9ybSk7XG5cdFx0XHRyYW5rZWRfYXNzZXRzLnNvcnQoKGxocywgcmhzKSA9PiByaHMuc2NvcmUgLSBsaHMuc2NvcmUpOyAgLy8gYmlnZ2VzdC10by1zbWFsbGVzdCA9PiBbMF0gaGFzIGJlc3QgYXNzZXRcblx0XHRcdGlmKHJhbmtlZF9hc3NldHMubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRcdERPV05MT0FEX0JVVFRPTi5pbm5lclRleHQgPSBcIk5vIGFzc2V0cyBmb3VuZFwiO1xuXHRcdFx0XHRET1dOTE9BRF9CVVRUT04uaHJlZiAgICAgID0gcmVsZWFzZS5odG1sX3VybDtcblx0XHRcdH0gZWxzZVxuXHRcdFx0XHRET1dOTE9BRF9CVVRUT04uaHJlZiA9IHJhbmtlZF9hc3NldHNbMF0uZGF0YS5icm93c2VyX2Rvd25sb2FkX3VybDtcblx0XHR9XG5cdH0pO1xufSk7XG4iXX0=
